name: Java CI dev with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: dev
    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'adopt'
    - name: Write secrets to application.properties
      run: |
        echo "spring.datasource.url=${{ secrets.SPRING_DATASOURCE_URL }}" >> src/main/resources/application.properties
        echo "spring.datasource.username=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> src/main/resources/application.properties
        echo "spring.datasource.password=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> src/main/resources/application.properties
        echo "spring.jpa.hibernate.ddl-auto=${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO }}" >> src/main/resources/application.properties
    - name: Grant permissions
      run: chmod +x ./gradlew
    - name: Build bootJar with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: bootJar
    - name: Rename artifact
      run: |
        for f in ./build/libs/*.jar
        do
          mv "$f" "./build/libs/proisic_dev_new.jar"
        done
    - name: Copy build via ssh
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VDS_ADDRESS }}
        username: ${{ secrets.VDS_USER }}
        password: ${{ secrets.VDS_PASS }}
        port: 22
        source: "build/libs/proisic_dev_new.jar"
        target: "/root/proisic_dev/"
    - name: Deploy application on remote server
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.VDS_ADDRESS }}
        username: ${{ secrets.VDS_USER }}
        password: ${{ secrets.VDS_PASS }}
        port: 22
        script: |
          /etc/init.d/proisic_dev stop
          rm -rf /root/proisic_dev/proisic_dev.jar
          mv /root/proisic_dev/proisic_dev_new.jar /root/proisic_dev/proisic_dev.jar
          /etc/init.d/proisic_dev start
