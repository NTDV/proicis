enum Hardness {
    L0,
    L1,
    L2,
    L3,
    L4,
    L5,
    L6,
    L7,
    L8,
    L9,
    L10
}

enum Skill {
    Programming
}

enum ThemeState {
    Banned,
    Denied,
    Reviewing,
    Approved
}

type Theme {
    id: ID!

    title: String!
    description: String!

    presentationSlide: FileUploadResult!
    hardness: Hardness!

    skills: [Skill!]!
    author: User!

    mentors: [User!]!

    state: ThemeState!
}

input ThemeInput {
    title: String!
    description: String!

    presentationSlide: Upload!
    hardness: Hardness!

    skills: [Skill!]!
}

extend type Query {
    getTheme(themeId: ID!): Theme!
    getThemes: [Theme!]!

    getMyThemes: [Theme!]!
    getUserThemes(userId: ID!): [Theme!]!
}

extend type Mutation {
    createTheme(themeInput: ThemeInput!): Theme!
    updateTheme(themeId: ID!, theme: ThemeInput!): Theme!
    deleteTheme(themeId: ID!): Boolean!

    setAuthorToTheme(themeId: ID!, userId: ID!): Theme!

    attachMentorsToTheme(themeId: ID!, mentorIds: [ID!]!): Theme!
    detachMentorsFromTheme(themeId: ID!, mentorIds: [ID!]!): Theme!

    changeThemeState(themeId: ID!, state: ThemeState!): Theme!
}